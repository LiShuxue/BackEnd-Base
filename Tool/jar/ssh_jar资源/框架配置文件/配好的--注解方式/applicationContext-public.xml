<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	
	<!-- 
		使用注解首先开启注解扫描
	 -->
	<context:component-scan base-package="cn.it.shop.." />
	
	<!-- 
		1.搭建Spring开发环境
			1.1:添加配置文件（配置文件可从其他地方复制来）和相应的spring-3.2-core.jar包
			1.2:创建Date对象，如果成功则Spring的环境OK
			1.3:通过基于Spring Junit 测试实例化Date
			
		2.搭建Hibernate开发环境
			2.1:添加配置文件和相应的hibernate-3.6.jar + mysql驱动包（通过myeclipse ——>add hibernate）
			2.2:分析cn.it.shop.util.HibernateSessionFactory的作用：加载配置文件hibernate.cfg.xml，创建session
			2.3:通过表逆向生成model（bean）、ORM映射文件
			2.4:创建service，通过new方式执行数据入库，在jee6中会出现异常org.hibernate.HibernateException: Unable to get the default Bean Validation factory
				解决方案，在hibernate配置文件中：<property name="javax.persistence.validation.mode">none</property>
				
		3.Spring与Hibernate整合（采用AOP来管理事务———实现声明式事务）
			3.1:添加包c3p0-0.9  spring-3.2-persistence(持久化用的)  spring-3.2-aop
			3.2:配置数据源com.mchange.v2.c3p0.ComboPooledDataSource
			3.3:配置LocalSessionFactoryBean，采用LocalSessionFactoryBean取代HibernateTemplate(HibernateTemplate这个不要配)
			3.4:配置事务管理器，管理SessionFactory，这样所有的session将会有声明式事务
			3.5:配置advice(通知)，通知是指定了哪些方法需要什么类型的事务模式
			3.6:配置AOP切面表达式。通知加切面表达式，才是完整的切入
			3.7:将Service交给Spring管理，并且依赖sessionFactory，如果能插入数据，则声明式事务成功
			
		4.搭建Struts2开发环境
			4.1:添加配置文件，和相应的hibernate3.6jar包，并在web.xml中配置StrutsPrepareAndExecuteFilter（这一步可以通过myeclipse来add,这样可以不用去配置web.xml）
			4.2:创建Action，并且配置到struts.xml中
			4.2:通过jsp访问Action，如果Action可以创建，则代表环境OK
			4.4:默认在没有整合的时候创建Action的工厂为：com.opensymphony.xwork2.ObjectFactory;
			
		5.搭建Spring和Struts的整合环境（采用Spring来管理Action，这样Action的依赖就能够注入进来）
			5.1:添加spring-3.2-web.jar  里面就包括：(struts2-spring-plugin-2.1.6.jar)
			5.2:把Action交给Spring管理, 配置在：applicationContext-action.xml
			5.3:在struts.xml中class对应的是spring中配置的action的id值
			5.4:在web.xml中配置监听器ContextLoaderListener，启动时加载Spring配置文件。
	 -->
	 <!-- hibernate配置文件中的那些连接数据库信息可以注释掉了 -->
	 <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
	 	<property name="driverClass" value="com.mysql.jdbc.Driver"/>
	 	<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/shop?useUnicode=true&amp;characterEncoding=utf-8"/>
	 	<property name="user" value="root"/>
	 	<property name="password" value="root"/>
	 </bean>
	 
	 <!-- 配置LocalSessionFactoryBean -->
	 <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
	 	<property name="dataSource" ref="dataSource"/>
	 	<property name="configLocation" value="classpath:hibernate.cfg.xml"/>
	 </bean>
	 
	 <!-- 配置事务管理器，管理SessionFactory -->
	 <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
	 	<property name="sessionFactory" ref="sessionFactory"/>
	 </bean>
	 
	 <!-- 配置advice(通知)   对save,update,delete.开头的方法，要切事务，对于其他的方法，事务可有可无-->
	 <tx:advice id="advice" transaction-manager="transactionManager">
	 	<tx:attributes>
	 		<tx:method name="save" propagation="REQUIRED"/>
	 		<tx:method name="update" propagation="REQUIRED"/>
	 		<tx:method name="delete" propagation="REQUIRED"/>
	 		<tx:method name="*" propagation="SUPPORTS"/>
	 	</tx:attributes>
	 </tx:advice>

	 <!-- 配置AOP切面表达式 -->
	 <aop:config> 
		<!-- 配置哪些包的类要切入事务。  cn.it.shop.service.impl包下的所有类的所有方法都切事务，具体切哪种，看方法名 -->
	 	<aop:pointcut expression="execution(* cn.it.shop.service.impl.*.*(..))" id="pointcut"/>
	 	<!-- 通知+切面表达式，才是完整的切入路径。 -->
	 	<aop:advisor advice-ref="advice" pointcut-ref="pointcut"/>
	 </aop:config>
	 
</beans>