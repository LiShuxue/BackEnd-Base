<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

	<bean id="some" class="com.lsx.demo.Some"/>
	
	<bean id="otherIntroduction" class="com.lsx.demo.OtherIntroduction"/>
	
	<!-- DefaultIntroductionAdvisor实例化这个bean，再指定下面的实现类和接口，就可以使代理对象进行强转，强转的对象是指定的实现类，类型是指定的接口 -->
	<bean id="otherAdvice" class="org.springframework.aop.support.DefaultIntroductionAdvisor">
		<!-- 哪个类实现是 IntroductionInterceptor 接口 -->
		<constructor-arg ref="otherIntroduction"/>
		<!-- 我要为加入哪个新的接口 -->
		<constructor-arg value="com.zyw.demo14.IOther"/>
	</bean>
	
	<!-- 
		1.原本的some，只实现了ISome接口	，同时，我所产生的代理对象，依然也实现了ISome
		加入 otherAdvice之后，有什么作用？
		作用：在你调用代理对象的方法时，会执行该“otherAdavice”的invoke方法
		
		当你的代理对象执行任何方法之前，先拦截。
	 -->
	<bean id="proxyFactoryBean" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="proxyInterfaces" value="com.zyw.demo14.ISome"/>
		<property name="target" ref="some"/>
		<property name="interceptorNames">
			<list>
				<value>otherAdvice</value>
			</list>
		</property>
	</bean>

</beans>


